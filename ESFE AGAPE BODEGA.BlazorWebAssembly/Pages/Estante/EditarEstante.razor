@page "/editar-estante/{Id:int}"
@using ESFE_AGAPE_BODEGA.DTOs.EstanteDTOs;
@using ESFE_AGAPE_BODEGA.DTOs.BodegaDTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using System.ComponentModel.DataAnnotations;
@using ESFE_AGAPE_BODEGA.BlazorWebAssembly.DataService;

<ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AuthGuard>
    <ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AutorizacionPorRol Rol="Admin">
        <div class="row m-4">
            <div class="card col-md-12">
                <div class="card-header row"><h1>Editar Estante</h1></div>
                <div class="card-body">
                    @if (isSuccess == false && isError == false)
                    {
                        <EditForm Model="estante" OnValidSubmit="Edit">
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="Nombre" class="form-label">Nombre<span style="color:red;">*</span></label>
                                    <InputText class="form-control" id="Nombre" @bind-Value="estante.Nombre" />
                                    <ValidationMessage For="() => estante.Nombre" />
                                </div>
                                <div class="col-md-6">
                                    <label for="Nombre" class="form-label">Bodega<span style="color:red;">*</span></label>
                                    <select class="form-control" @bind="estante.BodegaId" required>
                                        <option value="">Seleccione una bodega</option>
                                        @foreach (var bodega in bodegas)
                                        {
                                            <option value="@bodega.Id">@bodega.Nombre</option>
                                        }
                                    </select>
                                    <ValidationMessage For="() => estante.BodegaId" />
                                </div>
                                <div class="col-md-12">
                                    <label for="Descripcion" class="form-label">Descripcion<span style="color:red;">*</span></label>
                                    <InputTextArea class="form-control" id="Descripcion" @bind-Value="estante.Descripcion" />
                                    <ValidationMessage For="() => estante.Descripcion" />
                                </div>
                                <div class="col-md-6 mt-3">
                                    <button type="submit" class="btn btn-primary w-100">Guardar</button>
                                </div>
                                <div class="col-md-6 mt-3">
                                    <NavLink href="/lista-estante" class="btn btn-secondary w-100">Cancelar</NavLink>
                                </div>
                            </div>
                        </EditForm>
                    }
                    else if (isSuccess)
                    {
                        estante = new EditEstanteDTO();
                        isError = false;
                        <p class="alert alert-success">Estante se modifico con éxito.</p>
                        <NavLink href="/lista-estante" class="btn btn-success">Aceptar</NavLink>
                    }
                    else if (isError)
                    {
                        <p class="alert alert-error">Sucedio un error al intentar modificar.</p>
                        <NavLink href="/lista-estante" class="btn btn-danger">Aceptar</NavLink>
                    }
                </div>
            </div>
        </div>
    </ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AutorizacionPorRol>
</ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AuthGuard>
@code {
    // Declaración de un parámetro llamado "Id" que puede ser pasado al componente
    [Parameter]
    public int Id { get; set; }

    // Inyección de dependencia de CustomerService para
    // acceder a los servicios relacionados con los clientes
    [Inject]
    EstanteService estanteService { get; set; }
    List<SearchResultBodegaDTO.BodegaDTO> bodegas = new List<SearchResultBodegaDTO.BodegaDTO>();
    // Declaración e inicialización de un objeto "customer"
    //  para almacenar los detalles del cliente
    EditEstanteDTO estante = new EditEstanteDTO();

    // Declaración de variables booleanas para manejar el estado de éxito y error
    bool isSuccess = false;
    bool isError = false;

    // Método que se llama cuando se inicializa el componente
    protected override async Task OnInitializedAsync()
    {
        // Realiza una llamada asincrónica para obtener los
        // detalles del cliente por su Id
        var estanteDetail = await estanteService.ObtenerEstanteId(Id);

        // Inicializa el objeto "customer" con los detalles del cliente obtenidos
        estante = new EditEstanteDTO(estanteDetail);

        bodegas = await estanteService.ObtenerBodegas();
    }

    // Método para editar el cliente
    private async Task Edit()
    {
        // Realiza una llamada asincrónica para editar la información del cliente
        int result = await estanteService.ActualizarEstante(estante);

        // Verifica si el resultado de la edición es diferente
        // de cero (éxito) o igual a cero (error)
        if (result != 0)
            isSuccess = true;
        else
            isError = true;
    }

}