@page "/login"
@layout Login
@inject AuthService AuthService
@inject NavigationManager Navigation

@using ESFE_AGAPE_BODEGA.DTOs.UsuarioDTOs;

<div class="container mt-3">
    <div class="row justify-content-center" style="margin-top: 5px;">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header text-center">
                    <h1 class="card-text">Iniciar Sesión</h1>
                </div>
                <div class="card-body">
                    <EditForm Model="@loginDto" OnValidSubmit="@HandleLogin">
                        <DataAnnotationsValidator />

                        <LoadingSpinner IsLoading="@isLoading" />

                        <div class="form-group">
                            <label for="dui" class="control-label">DUI</label>
                            <InputText id="dui" class="form-control" @bind-Value="@loginDto.DUI" style="border-radius: 30px;" maxlength="9" pattern="\d*"
                                       oninput="this.value = this.value.replace(/[^0-9]/g, '')" disabled="@isLoading" />
                            <ValidationMessage For="@(() => loginDto.DUI)" class="text-danger" />
                        </div>

                        <div class="form-group">
                            <label for="password" class="control-label">Contraseña</label>
                            <div class="input-group">
                                <InputText id="password" type="@passwordInputType" class="form-control" @bind-Value="@loginDto.Password" style="border-radius: 30px;" disabled="@isLoading" />
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-outline" @onclick="TogglePasswordVisibility" style="border: 0;" disabled="@isLoading">
                                        @if (isPasswordVisible)
                                        {
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);"><path d="M17 8V7c0-2.757-2.243-5-5-5S7 4.243 7 7v3H6c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2v-8c0-1.103-.897-2-2-2H9V7c0-1.654 1.346-3 3-3s3 1.346 3 3v1h2z"></path></svg>
                                        }
                                        else
                                        {
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(0, 0, 0, 1);"><path d="M20 12c0-1.103-.897-2-2-2h-1V7c0-2.757-2.243-5-5-5S7 4.243 7 7v3H6c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2v-8zM9 7c0-1.654 1.346-3 3-3s3 1.346 3 3v3H9V7z"></path></svg>
                                        }
                                    </button>
                                </div>
                            </div>
                            <ValidationMessage For="@(() => loginDto.Password)" class="text-danger" />
                        </div>

                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary" style="border-radius: 30px; width: 100%;" disabled="@isLoading">Iniciar</button>
                        </div>

                        @if (errorMessage != null)
                        {
                            <div class="alert alert-danger text-center">@errorMessage</div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginUsuarioDTO loginDto = new LoginUsuarioDTO();
    private string errorMessage;
    private bool isPasswordVisible = false;
    private bool isLoading = false; // Estado de carga
    private string passwordInputType => isPasswordVisible ? "text" : "password";

    private async Task HandleLogin()
    {
        isLoading = true; // Activar estado de carga
        try
        {
            var result = await AuthService.Login(loginDto);
            if (result)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Credenciales inválidas. Inténtalo de nuevo.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error en el inicio de sesión: {ex.Message}";
        }
        finally
        {
            isLoading = false; // Desactivar estado de carga
        }
    }

    private void TogglePasswordVisibility()
    {
        isPasswordVisible = !isPasswordVisible;
    }
}