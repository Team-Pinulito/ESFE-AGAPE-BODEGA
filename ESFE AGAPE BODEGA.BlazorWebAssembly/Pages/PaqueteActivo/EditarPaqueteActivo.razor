@page "/editar-paqueteActivo/{Id:int}"

@using ESFE_AGAPE_BODEGA.DTOs.PaqueteActivoDTOs
@using ESFE_AGAPE_BODEGA.DTOs.DetallePaqueteActivoDTOs
@using ESFE_AGAPE_BODEGA.DTOs.ActivoDTOs

@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using ESFE_AGAPE_BODEGA.BlazorWebAssembly.DataService

<ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AuthGuard>
    <ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AutorizacionPorRol Roles='new List<string> { "Admin", "SusAdmin" }'>
        <div class="row m-4">
            <div class="card col-md-12">
                <div class="card-header row"><h1>Editar Paquete Activo</h1></div>
                <div class="card-body">
                    @if (isSuccess == false && isError == false)
                    {
                        <EditForm Model="paqueteActivo" OnValidSubmit="Edit">
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="Correlativo" class="form-label">Correlativo<span style="color:red;">*</span></label>
                                    <InputText class="form-control" id="Correlativo" @bind-Value="paqueteActivo.Correlativo" />
                                    <ValidationMessage For="() => paqueteActivo.Correlativo" />
                                </div>
                                <div class="col-md-6">
                                    <label for="Nombre" class="form-label">Nombre<span style="color:red;">*</span></label>
                                    <InputText class="form-control" id="Nombre" @bind-Value="paqueteActivo.Nombre" />
                                    <ValidationMessage For="() => paqueteActivo.Nombre" />
                                </div>

                                <div class="row mt-3 align-items-center">
                                    <div class="col-md-6">
                                        <h3>Detalles del Paquete</h3>
                                    </div>
                                    <div class="col-md-6 text-end">
                                        <button type="button" class="btn btn-primary mt-4" @onclick="AgregarDetalle">
                                            <!-- SVG del icono -->
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(255, 255, 255, 1);">
                                                <path d="M19 15v-3h-2v3h-3v2h3v3h2v-3h3v-2h-.937zM4 7h11v2H4zm0 4h11v2H4zm0 4h8v2H4z"></path>
                                            </svg>
                                        </button>
                                    </div>
                                </div>

                                <div class="row">
                                    @if (paqueteActivo.DetallePaqueteActivos != null && paqueteActivo.DetallePaqueteActivos.Any())
                                    {
                                        @foreach (var detalle in paqueteActivo.DetallePaqueteActivos)
                                        {
                                            <_DetallePaqueteActivo detalle="detalle"
                                                                   activos="activos"
                                                                   EliminarDetalle="() => EliminarDetalle(detalle)"
                                                                   isEditMode="true" />
                                        }
                                    }
                                    else
                                    {
                                        <div class="d-flex justify-content-center align-items-center" style="height: 200px;">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="visually-hidden">Cargando...</span>
                                            </div>
                                            <p class="ms-3">Cargando...</p>
                                        </div>
                                    }
                                </div>
                                <div class="row col-4">
                                <div class="col-md-6 mt-3">
                                    <button type="submit" class="btn btn-primary me-2" disabled="@isSubmitting">Guardar</button>
                                </div>
                                <div class="col-md-6 mt-3">
                                    <NavLink href="/lista-paqueteActivo" class="btn btn-secondary me-2">Cancelar</NavLink>
                                </div>
                                </div>
                            </div>
                        </EditForm>
                    }
                    else if (isSuccess)
                    {
                        paqueteActivo = new EditPaqueteActivoDTO();
                        isError = false;
                        <p class="alert alert-success">Paquete Activo se modificó con éxito.</p>
                        <NavLink href="/lista-paqueteActivo" class="btn btn-success">Aceptar</NavLink>
                    }
                    else if (isError)
                    {
                        <p class="alert alert-danger">Ocurrió un error al intentar modificar el paquete activo.</p>
                        <NavLink href="/lista-paqueteActivo" class="btn btn-danger">Aceptar</NavLink>
                    }
                </div>
            </div>
        </div>
    </ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AutorizacionPorRol>
</ESFE_AGAPE_BODEGA.BlazorWebAssembly.Pages.Login.AuthGuard>

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    PaqueteActivoService paqueteActivoService { get; set; }

    List<SearchResultActivoDTO.ActivoDTO> activos = new List<SearchResultActivoDTO.ActivoDTO>();

    EditPaqueteActivoDTO paqueteActivo = new EditPaqueteActivoDTO
        {
            DetallePaqueteActivos = new List<DetallePaqueteActivoDTO>()
        };

    bool isSuccess = false;
    bool isError = false;
    bool isSubmitting = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var paqueteActivoDetail = await paqueteActivoService.ObtenerPaqueteActivoPorId(Id);

            if (paqueteActivoDetail != null)
            {
                paqueteActivo = new EditPaqueteActivoDTO(paqueteActivoDetail);
                paqueteActivo.DetallePaqueteActivos ??= new List<DetallePaqueteActivoDTO>();
            }

            activos = await paqueteActivoService.ObtenerActivos() ?? new List<SearchResultActivoDTO.ActivoDTO>();
        }
        catch (Exception)
        {
            isError = true;
        }
    }

    private async Task Edit()
    {
        isSubmitting = true;
        try
        {
            int result = await paqueteActivoService.ActualizarPaqueteActivo(paqueteActivo);
            isSuccess = result != 0;
            isError = !isSuccess;
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void AgregarDetalle()
    {
        paqueteActivo.DetallePaqueteActivos ??= new List<DetallePaqueteActivoDTO>();
        paqueteActivo.DetallePaqueteActivos.Add(new DetallePaqueteActivoDTO());
    }

    private void EliminarDetalle(DetallePaqueteActivoDTO detalle)
    {
        paqueteActivo.DetallePaqueteActivos?.Remove(detalle);
    }
}