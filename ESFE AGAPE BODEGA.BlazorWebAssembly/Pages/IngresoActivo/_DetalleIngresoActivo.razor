@inherits LayoutComponentBase

@using ESFE_AGAPE_BODEGA.DTOs.DetalleInresoActivoDTOs
@using ESFE_AGAPE_BODEGA.DTOs.IngresoActivoDTOs
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components

<div class="row align-items-center">
    <div class="col-md-5">
        <!-- Cantidad del Detalle -->
        <label for="Cantidad" class="form-label">Cantidad</label>
        <InputNumber class="form-control" id="Cantidad" @bind-Value="detalle.Cantidad" disabled="@(!isEditMode)" @oninput="OnCantidadChanged" />
        <ValidationMessage For="() => detalle.Cantidad" />
    </div>
    <div class="col-md-5">
        <!-- Cantidad del Detalle -->
        <label for="Precio" class="form-label">Precio</label>
        <InputNumber class="form-control" id="Precio" @bind-Value="detalle.Precio" step="0.01" disabled="@(!isEditMode)" @oninput="OnPrecioChanged" />
        <ValidationMessage For="() => detalle.Precio" />
    </div>
   
    <div class="col-md-2 text-end">
        <!-- Botón Eliminar -->
        @if (isEditMode)
        {
            <button type="button" class="btn btn-danger mt-4" @onclick="EliminarDetalle" style="float:right;">
                <!-- SVG del icono -->
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" style="fill: rgba(255, 255, 255, 1);">
                    <path d="M21.063 15H13v2h9v-2zM4 7h11v2H4zm0 4h11v2H4zm0 4h7v2H4z"></path>
                </svg>
            </button>
        }
    </div>
</div>

@code {
    [Parameter] public DetalleIngresoActivoDTO detalle { get; set; }
    [Parameter] public EventCallback EliminarDetalle { get; set; }
    [Parameter] public bool isEditMode { get; set; }
    [Parameter] public EventCallback OnDetalleChanged { get; set; }

    private void OnCantidadChanged(ChangeEventArgs e)
    {
        detalle.Cantidad = Convert.ToInt32(e.Value); // Actualiza la cantidad
        OnDetalleChanged.InvokeAsync(null); // Notifica al componente padre del cambio
    }

    private void OnPrecioChanged(ChangeEventArgs e)
    {
        detalle.Precio = Convert.ToDecimal(e.Value); // Actualiza el precio
        OnDetalleChanged.InvokeAsync(null); // Notifica al componente padre del cambio
    }
}